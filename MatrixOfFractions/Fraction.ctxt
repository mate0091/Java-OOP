#BlueJ class context
comment0.target=Fraction()
comment0.text=\nConstructor\ for\ Fraction\ncreates\ a\ unitary\ fraction\n\n
comment1.params=n\ d
comment1.target=Fraction(int,\ int)
comment1.text=\nConstructor\ for\ Fractionm\n@param\ n\ -\ numerator,\ integer\n@param\ m\ -\ denominator,\ integer\nBy\ convention,\ the\ sign\ is\ kept\ with\ the\ numerator;\ \nthus,\ negative\ deniminators\ are\ not\ legal\ \n\n
comment10.params=f
comment10.target=boolean\ equals(Fraction)
comment10.text=\nChecks\ wether\ this\ fraction\ is\ equal\ to\ another\n@param\ fraction\ to\ check\ if\ equal\ with\n@return\ true\ if\ equal;\ false\ otherwise\n\n
comment11.target=int\ getNumerator()
comment12.target=int\ getDenominator()
comment13.target=String\ toString()
comment13.text=\n@retruns\ a\ String\ representation\ of\ this\ fraction\n\n
comment14.params=o
comment14.target=int\ compareTo(Object)
comment14.text=\nCompares\ this\ fraction\ to\ the\ one\ given\ as\ an\ argument\n@param\ o\ -\ fraction\ to\ compare\ to\n@return\ 1\ if\ this\ is\ greater;\ 0\ if\ equal;\ -1\ if\ less\n\n
comment15.params=f
comment15.target=Fraction\ simplify(Fraction)
comment15.text=\nSimplifies\ the\ fraction\ given\ as\ an\ argument\ and\ returns\ it\nDoes\ not\ change\ original\ fraction\n@param\ f\ -\ fraction\ to\ simplify\n@return\ reference\ to\ simplified\ fraction\n\n
comment16.params=a\ b
comment16.target=int\ getGCD(int,\ int)
comment16.text=\nGreatest\ common\ divisor\ of\ two\ integers\ a\ and\ b\n\n
comment17.params=a\ b
comment17.target=int\ getLCM(int,\ int)
comment17.text=\nLeast\ common\ multiple\ of\ two\ integers\ a\ and\ b\n\n
comment2.params=f
comment2.target=Fraction(Fraction)
comment2.text=\nCopy\ constructor\ for\ Fraction\nCreates\ a\ duplicate\ of\ the\ fraction\ givenas\ an\ argument\n@param\ f\ -\ Fraction\ to\ duplicate\n\n
comment3.params=f
comment3.target=void\ add(Fraction)
comment3.text=\nAdds\ this\ fraction\ with\ the\ one\ given\ as\ an\ argument\nand\ accumulates\ the\ result\ in\ this\ fraction\n@param\ f\ -\ fraction\ to\ add\ with\n\n
comment4.params=f
comment4.target=void\ subtract(Fraction)
comment4.text=\nSubtracts\ from\ this\ fraction\ the\ one\ given\ as\ an\ argument\nand\ accumulates\ the\ result\ in\ this\ fraction\n@param\ f\ -\ fraction\ to\ subtract\ from\ this\ one\n\n
comment5.params=f
comment5.target=void\ multiply(Fraction)
comment5.text=\nMultiplies\ this\ fraction\ by\ the\ one\ given\ as\ an\ argument\nand\ accumulates\ the\ result\ in\ this\ fraction\n@param\ f\ -\ fraction\ to\ multiply\ with\n\n
comment6.params=f
comment6.target=void\ divide(Fraction)
comment6.text=\nDivides\ this\ fraction\ through\ the\ one\ given\ as\ an\ argument\nand\ accumulates\ the\ result\ in\ this\ fraction\n@param\ f\ -\ fraction\ to\ divide\ to\n\n
comment7.target=void\ simplify()
comment7.text=\nSimplifies\ this\ fraction\n\n
comment8.target=void\ swap()
comment8.text=\nSwaps\ numerator\ with\ denominator;\ thus\ inverts\ fraction\n\n
comment9.target=double\ toDouble()
comment9.text=\nReturns\ the\ real\ equivalent\ of\ this\ fraction\n@return\ a\ double\ approx.\ equal\ to\ this\ fraction\n\n
numComments=18
